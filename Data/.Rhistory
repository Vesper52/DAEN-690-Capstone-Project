only_AA <- subset(nhanes_trim, Race = 4)
table(only_AA$Race)
only_AA <- subset(nhanes_trim, Race == 4)
table(only_AA$Race)
zeroVarpred <- nearZeroVar(nhanes_trim)
colnames(nhanes_trim[,zeroVarpred])
colnames(nhanes_trim[,-zeroVarpred])
response_non_AA <- non_AA$Measured_Diabetes_x2
View(only_AA)
View(only_AA)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
response_non_AA <- factor(response_non_AA)
levels(response_non_AA) <- c('No Risk', 'Risk')
response_only_AA <- factor(response_only_AA)
levels(response_only_AA) <- c('No Risk', 'Risk')
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
non_AA <- non_AA[,-'Measured_diabetes_x2']
non_AA <- non_AA[,-c('Measured_diabetes_x2')]
non_AA <- non_AA[,-c('Measured_Diabetes_x2')]
non_AA <- non_AA[,-1]
View(non_AA)
non_AA <- subset(nhanes_trim, Race!=4)
View(non_AA)
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
set.seed(0)
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
predictorTraining_only_AA <- only_AA[index_AA,]
predictorTesting_only_AA <- only_AA[-index_AA,]
responseTraining_only_AA <- response_only_AA[index_AA]
responseTesting_only_AA <- response_only_AA[-index_AA]
summary(responseTesting_only_AA)
summary(responseTraining_only_AA)
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[index_non_AA]
summary(responseTraining_non_AA)
summary(responseTesting_non_AA)
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[-index_non_AA]
summary(responseTraining_non_AA)
summary(responseTesting_non_AA)
RFGrid <- expand.grid(.mtry = 6:12)
RFparams <- trainControl(method = 'cv', number = 10, classProbs = TRUE, savePredictions = TRUE)
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
responseTraining_all <- rbind(responseTraining_only_AA, responseTraining_non_AA)
responseTesting_all <- rbind(responseTesting_only_AA, responseTesting_non_AA)
View(nhanes_trim)
View(nhanes_trim)
data_nhanes <- read.csv('NHANES_Data.csv', header = T, sep = ',')
colnames(data_nhanes)
nhanes_trim <- subset(data_nhanes, select=-c(ï..Measured_Diabetes_A1c, Measured_Diabetes, Dr_Diabetes_Binary, Dr_Diabetes, Pre_Dia, SEQN, AHH_Income,
FAM_Income, Weight_kg, Height_cm, Len_Leg, Len_Arm, Waist, Fasting_Glucose, Private_Insurance))
colnames(nhanes_trim)
zeroVarpred <- nearZeroVar(nhanes_trim)
colnames(nhanes_trim[,zeroVarpred])
non_AA <- subset(nhanes_trim, Race!=4)
table(non_AA$Race)
only_AA <- subset(nhanes_trim, Race == 4)
table(only_AA$Race)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
set.seed(0)
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
predictorTraining_only_AA <- only_AA[index_AA,]
predictorTesting_only_AA <- only_AA[-index_AA,]
responseTraining_only_AA <- response_only_AA[index_AA]
responseTesting_only_AA <- response_only_AA[-index_AA]
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[-index_non_AA]
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
responseTraining_all <- rbind(responseTraining_only_AA, responseTraining_non_AA)
responseTesting_all <- rbind(responseTesting_only_AA, responseTesting_non_AA)
responseTraining_non_AA[1:10,]
responseTraining_non_AA[1:10]
responseTraining_only_AA[1:10]
responseTesting_non_AA[1:10]
responseTesting_only_AA[1:10]
responseTesting_all
data_nhanes <- read.csv('NHANES_Data.csv', header = T, sep = ',')
colnames(data_nhanes)
nhanes_trim <- subset(data_nhanes, select=-c(ï..Measured_Diabetes_A1c, Measured_Diabetes, Dr_Diabetes_Binary, Dr_Diabetes, Pre_Dia, SEQN, AHH_Income,
FAM_Income, Weight_kg, Height_cm, Len_Leg, Len_Arm, Waist, Fasting_Glucose, Private_Insurance))
colnames(nhanes_trim)
zeroVarpred <- nearZeroVar(nhanes_trim)
colnames(nhanes_trim[,zeroVarpred])
non_AA <- subset(nhanes_trim, Race!=4)
table(non_AA$Race)
only_AA <- subset(nhanes_trim, Race == 4)
table(only_AA$Race)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
# response_non_AA <- factor(response_non_AA)
# levels(response_non_AA) <- c('No Risk', 'Risk')
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
# response_only_AA <- factor(response_only_AA)
# levels(response_only_AA) <- c('No Risk', 'Risk')
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
setwd('C:/Users/prahi/Desktop/DAEN 690 - Capstone/Final Project - GitHub Repo/DAEN-690-Capstone-Project/Data')
data_nhanes <- read.csv('NHANES_Data.csv', header = T, sep = ',')
colnames(data_nhanes)
nhanes_trim <- subset(data_nhanes, select=-c(ï..Measured_Diabetes_A1c, Measured_Diabetes, Dr_Diabetes_Binary, Dr_Diabetes, Pre_Dia, SEQN, AHH_Income,
FAM_Income, Weight_kg, Height_cm, Len_Leg, Len_Arm, Waist, Fasting_Glucose, Private_Insurance))
colnames(nhanes_trim)
zeroVarpred <- nearZeroVar(nhanes_trim)
colnames(nhanes_trim[,zeroVarpred])
non_AA <- subset(nhanes_trim, Race!=4)
table(non_AA$Race)
only_AA <- subset(nhanes_trim, Race == 4)
table(only_AA$Race)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
# response_non_AA <- factor(response_non_AA)
# levels(response_non_AA) <- c('No Risk', 'Risk')
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
# response_only_AA <- factor(response_only_AA)
# levels(response_only_AA) <- c('No Risk', 'Risk')
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
set.seed(0)
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
predictorTraining_only_AA <- only_AA[index_AA,]
predictorTesting_only_AA <- only_AA[-index_AA,]
responseTraining_only_AA <- response_only_AA[index_AA]
responseTesting_only_AA <- response_only_AA[-index_AA]
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=0.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[-index_non_AA]
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
responseTraining_all <- rbind(responseTraining_only_AA, responseTraining_non_AA)
responseTesting_all <- rbind(responseTesting_only_AA, responseTesting_non_AA)
responseTesting_all
type(responseTesting_all)
typeof(responseTesting_all)
typeof(responseTraining_all)
responseTraining_all[1:10]
responseTesting_all[1:10]
length(responseTraining_all)
length(responseTesting_all)
length(responseTesting_only_AA)
length(responseTesting_non_AA)
622+738
length(responseTraining_only_AA)
length(responseTraining_non_AA)
lenght(responseTraining_all)
length(responseTraining_all)
2490*2
test <- predictorTraining_only_AA + predictorTraining_non_AA
test <- merge(predictorTraining_only_AA, predictorTraining_non_AA)
View(test)
test <- merge(predictorTraining_only_AA, predictorTraining_non_AA)
View(test)
test <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
length(predictorTraining_only_AA)
length(predictorTraining_non_AA)
length(test)
nrow(predictorTraining_only_AA)
nrow(predictorTraining_non_AA)
nrow(test)
2490+83
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
nrow(predictorTesting_only_AA)
nrow(predictorTesting_non_AA)
nrow(predictorTesting_all)
738+622
test <- merge(responseTraining_non_AA, responseTraining_only_AA)
test
test <- c(responseTraining_only_AA, responseTraining_non_AA)
test
length(responseTraining_only_AA, responseTesting_non_AA)
length(responseTraining_only_AA)
length(responseTesting_non_AA)
lenght(test)
length(test)
test <- c(responseTraining_only_AA, responseTraining_non_AA)
length(responseTraining_only_AA)
length(responseTesting_non_AA)
length(test)
length(responseTraining_only_AA)
length(responseTraining_non_AA)
length(test)
83+2490
responseTraining_all <- c(responseTraining_only_AA, responseTraining_non_AA)
length(responseTraining_only_AA)
length(responseTraining_non_AA)
length(responseTraining_all)
responseTesting_all <- c(responseTesting_only_AA, responseTesting_non_AA)
length(responseTesting_only_AA)
length(responseTesting_non_AA)
length(responseTesting_all)
length(responseTraining_all)
length(responseTesting_all)
2573+1360
2573/3933
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
RFparams <- trainControl(method = 'cv', number = 10, classProbs = TRUE, savePredictions = TRUE)
#params
RFGrid <- expand.grid(.mtry = 6:12)
RFparams <- trainControl(method = 'cv', number = 10, classProbs = TRUE, savePredictions = TRUE)
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
warnings()
colnames(data_nhanes)
names <- c('Measured_Diabetes_x2', 'Gender','Race','Birth_Country','Citizenship','Edu_Adult','Marital_Status','Health_Insurance')
nhanes_trim <- lapply(nnhanes_trim[,names], factor)
nhanes_trim <- lapply(nhanes_trim[,names], factor)
View(nhanes_trim)
data_nhanes <- read.csv('NHANES_Data.csv', header = T, sep = ',')
colnames(data_nhanes)
nhanes_trim <- subset(data_nhanes, select=-c(ï..Measured_Diabetes_A1c, Measured_Diabetes, Dr_Diabetes_Binary, Dr_Diabetes, Pre_Dia, SEQN, AHH_Income,
FAM_Income, Weight_kg, Height_cm, Len_Leg, Len_Arm, Waist, Fasting_Glucose, Private_Insurance))
colnames(nhanes_trim)
zeroVarpred <- nearZeroVar(nhanes_trim)
colnames(nhanes_trim[,zeroVarpred])
names <- c('Measured_Diabetes_x2', 'Gender','Race','Birth_Country','Citizenship','Edu_Adult','Marital_Status','Health_Insurance')
nhanes_trim[,names] <- lapply(nhanes_trim[,names], factor)
View(nhanes_trim)
non_AA <- subset(nhanes_trim, Race!=4)
table(non_AA$Race)
only_AA <- subset(nhanes_trim, Race == 4)
table(only_AA$Race)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
set.seed(0)
set.seed(0)
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
predictorTraining_only_AA <- only_AA[index_AA,]
predictorTesting_only_AA <- only_AA[-index_AA,]
responseTraining_only_AA <- response_only_AA[index_AA]
responseTesting_only_AA <- response_only_AA[-index_AA]
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=0.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[-index_non_AA]
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
nrow(predictorTraining_only_AA)
nrow(predictorTraining_non_AA)
nrow(predictorTraining_all)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
nrow(predictorTesting_only_AA)
nrow(predictorTesting_non_AA)
nrow(predictorTesting_all)
responseTraining_all <- c(responseTraining_only_AA, responseTraining_non_AA)
length(responseTraining_only_AA)
length(responseTraining_non_AA)
length(responseTraining_all)
responseTesting_all <- c(responseTesting_only_AA, responseTesting_non_AA)
length(responseTesting_only_AA)
length(responseTesting_non_AA)
length(responseTesting_all)
View(predictorTraining_all)
#params
RFGrid <- expand.grid(.mtry = 3:6)
RFparams <- trainControl(method = 'cv', number = 10, classProbs = TRUE, savePredictions = TRUE)
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
warnings()
is.factor(nhanes_trim$Race)
is.factor(nhanes_trim$Measured_Diabetes_x2)
is.factor(responseTraining_all)
nhanes_trim <- subset(data_nhanes, select=-c(ï..Measured_Diabetes_A1c, Measured_Diabetes, Dr_Diabetes_Binary, Dr_Diabetes, Pre_Dia, SEQN, AHH_Income,
FAM_Income, Weight_kg, Height_cm, Len_Leg, Len_Arm, Waist, Fasting_Glucose, Private_Insurance))
zeroVarpred <- nearZeroVar(nhanes_trim)
colnames(nhanes_trim[,zeroVarpred])
names <- c('Measured_Diabetes_x2', 'Gender','Race','Birth_Country','Citizenship','Edu_Adult','Marital_Status','Health_Insurance')
nhanes_trim[,names] <- lapply(nhanes_trim[,names], as.factor)
View(nhanes_trim)
non_AA <- subset(nhanes_trim, Race!=4)
table(non_AA$Race)
only_AA <- subset(nhanes_trim, Race == 4)
table(only_AA$Race)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
set.seed(0)
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
predictorTraining_only_AA <- only_AA[index_AA,]
predictorTesting_only_AA <- only_AA[-index_AA,]
responseTraining_only_AA <- response_only_AA[index_AA]
responseTesting_only_AA <- response_only_AA[-index_AA]
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=0.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[-index_non_AA]
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
nrow(predictorTraining_only_AA)
nrow(predictorTraining_non_AA)
nrow(predictorTraining_all)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
nrow(predictorTesting_only_AA)
nrow(predictorTesting_non_AA)
nrow(predictorTesting_all)
responseTraining_all <- c(responseTraining_only_AA, responseTraining_non_AA)
length(responseTraining_only_AA)
length(responseTraining_non_AA)
length(responseTraining_all)
responseTesting_all <- c(responseTesting_only_AA, responseTesting_non_AA)
length(responseTesting_only_AA)
length(responseTesting_non_AA)
length(responseTesting_all)
#params
RFGrid <- expand.grid(.mtry = 3:6)
RFparams <- trainControl(method = 'cv', number = 10, classProbs = TRUE, savePredictions = TRUE)
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
warnings()
responseTraining_all <- factor(responseTraining_all)
responseTesting_all <- factor(responseTesting_all)
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
responseTraining_all <- factor(responseTraining_all)
responseTesting_all <- factor(responseTesting_all)
levels(responseTraining_all) <- c('No Risk', 'Risk')
levels(responseTesting_all) <- c('No Risk', 'Risk')
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
levels(nhanes_trim$Gender) <- c('Male','Female')
levels(nhanes_trim$Gender) <- c('Male','Female')
levels(nhanes_trim$Race) <- c('Mexican','Hispanic','White','Black','Asian','Other')
levels(nhanes_trim$Birth_Country) <- c('USA','Other')
levels(nhanes_trim$Citizenship) <- c('Citizen','Non_Citizen')
levels(nhanes_trim$Edu_Adult) <- c('Below9th','Between9-11','HS_Grad','Some_College','College_Grad')
levels(nhanes_trim$Marital_Status) <- c('Married','Widowed','Divorced','Separated','Never_Married','Living_with_partner')
levels(nhanes_trim$Health_Insurance) <- c('Yes','No')
non_AA <- subset(nhanes_trim, Race!=4)
table(non_AA$Race)
only_AA <- subset(nhanes_trim, Race == 4)
table(only_AA$Race)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
set.seed(0)
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
predictorTraining_only_AA <- only_AA[index_AA,]
predictorTesting_only_AA <- only_AA[-index_AA,]
responseTraining_only_AA <- response_only_AA[index_AA]
responseTesting_only_AA <- response_only_AA[-index_AA]
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=0.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[-index_non_AA]
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
nrow(predictorTraining_only_AA)
nrow(predictorTraining_non_AA)
nrow(predictorTraining_all)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
nrow(predictorTesting_only_AA)
nrow(predictorTesting_non_AA)
nrow(predictorTesting_all)
responseTraining_all <- c(responseTraining_only_AA, responseTraining_non_AA)
length(responseTraining_only_AA)
length(responseTraining_non_AA)
length(responseTraining_all)
responseTesting_all <- c(responseTesting_only_AA, responseTesting_non_AA)
length(responseTesting_only_AA)
length(responseTesting_non_AA)
length(responseTesting_all)
responseTraining_all <- factor(responseTraining_all)
responseTesting_all <- factor(responseTesting_all)
levels(responseTraining_all) <- c('No_Risk', 'Risk')
levels(responseTesting_all) <- c('No_Risk', 'Risk')
#params
RFGrid <- expand.grid(.mtry = 3:6)
RFparams <- trainControl(method = 'cv', number = 10, classProbs = TRUE, savePredictions = TRUE)
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
nhanes_trim[rowSums(is.na(nhanes_trim))==0,]
is.na(nhanes_trim)
nhanes_trim[!complete.cases(nhanes_trim),]
nhanes_trim[complete.cases(nhanes_trim),]
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
rm_nas <- na.omit(nhanes_trim)
View(rm_nas)
table(only_AA$Race)
table(non_AA$Race)
table(only_AA$Race)
non_AA <- subset(nhanes_trim, Race!=Black)
non_AA <- subset(nhanes_trim, Race!='Black')
table(non_AA$Race)
only_AA <- subset(nhanes_trim, Race == 'Black')
table(only_AA$Race)
response_non_AA <- non_AA[,'Measured_Diabetes_x2']
response_only_AA <- only_AA[,'Measured_Diabetes_x2']
non_AA <- non_AA[,-1]
only_AA <- only_AA[,-1]
set.seed(0)
index_AA <- createDataPartition(response_only_AA, p=0.1, list=FALSE)
predictorTraining_only_AA <- only_AA[index_AA,]
predictorTesting_only_AA <- only_AA[-index_AA,]
responseTraining_only_AA <- response_only_AA[index_AA]
responseTesting_only_AA <- response_only_AA[-index_AA]
set.seed(0)
index_non_AA <- createDataPartition(response_non_AA, p=0.8, list=FALSE)
predictorTraining_non_AA <- non_AA[index_non_AA,]
predictorTesting_non_AA <- non_AA[-index_non_AA,]
responseTraining_non_AA <- response_non_AA[index_non_AA]
responseTesting_non_AA <- response_non_AA[-index_non_AA]
predictorTraining_all <- rbind(predictorTraining_only_AA, predictorTraining_non_AA)
nrow(predictorTraining_only_AA)
nrow(predictorTraining_non_AA)
nrow(predictorTraining_all)
predictorTesting_all <- rbind(predictorTesting_only_AA, predictorTesting_non_AA)
nrow(predictorTesting_only_AA)
nrow(predictorTesting_non_AA)
nrow(predictorTesting_all)
responseTraining_all <- c(responseTraining_only_AA, responseTraining_non_AA)
length(responseTraining_only_AA)
length(responseTraining_non_AA)
length(responseTraining_all)
responseTesting_all <- c(responseTesting_only_AA, responseTesting_non_AA)
length(responseTesting_only_AA)
length(responseTesting_non_AA)
length(responseTesting_all)
responseTraining_all <- factor(responseTraining_all)
responseTesting_all <- factor(responseTesting_all)
levels(responseTraining_all) <- c('No_Risk', 'Risk')
levels(responseTesting_all) <- c('No_Risk', 'Risk')
#params
RFGrid <- expand.grid(.mtry = 3:6)
RFparams <- trainControl(method = 'cv', number = 10, classProbs = TRUE, savePredictions = TRUE)
set.seed(0)
RFmodel <- train(predictorTraining_all,responseTraining_all,method="rf",
trControl = RFparams,
tuneGrid = RFGrid)
RFmodel
RFTest <- data.frame(Method="RF",Y=responseTesting_all,
X=predict(RFmodel,predictorTesting_all))
RFmodel
RFmodel$bestTune
RFmodel$results[3,] #these are the optimal model params
RFmerge <- merge(RFmodel$pred,  RFmodel$bestTune)
RFTest <- data.frame(Method="RF",Y=responseTesting_all,
X=predict(RFmodel,predictorTesting_all))
#RF Predict
RFPredictions <- predict(RFmodel, newdata=predictorTesting_all)
RFAssess <- data.frame(obs=responseTesting_all, pred = RFPredictions)
defaultSummary(RFAssess)
confusionMatrix(RFPredictions, reference = responseTesting_all)
head(RFAssess)
test <- c(RFAssess, predictorTesting_all)
head(test)
View(test)
View(test)
test <- merge(RFAssess, predictorTesting_all)
View(test)
library(randomForest)
varImpPlot(RFmodel)
varImp(RFmodel)
defaultSummary(RFAssess)
RFmodel$results[3,] #these are the optimal model params
defaultSummary(RFAssess)
confusionMatrix(RFPredictions, reference = responseTesting_all)
test <- predictorTesting_all
test['predictions'] <- RFPredictions
View(test)
View(test)
test['actual_vals'] <- responseTesting_all
View(test)
test <- test %>% mutate(Results = if_else(predictions ==actual_vals, 1, 0)
))
test <- test %>% mutate(Results = if_else(predictions ==actual_vals, 1, 0))
library(dplyr)
test <- test %>% mutate(Results = if_else(predictions ==actual_vals, 1, 0))
View(test)
table(test$Race, test$Results)
